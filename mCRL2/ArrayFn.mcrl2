
map
	inc: Nat -> Nat;
	incr: List(Nat) -> List(Nat);

var
	numbers: List(Nat);
	number: Nat;

eqn
	inc(number) = number + 1;
	incr(numbers) = numbers whr numbers=inc(numbers) end;
	%incr(numbers) = numbers;

act
	nop;


proc Test_Controller(numbers:List(Nat)) = (
	nop . Test_Controller(incr(numbers))
);

proc Init_Controller = (
	
	nop
	
);

proc Incr(numbers: list(Nat)) = (
	
	nop
	
);

init
	allow(
		{
	
		},
		comm(
			{
				
			},
			Test_Controller([1,2,5]) ||
			Incr([1,2,4]) ||
			Init_Controller
		)
	);